{
"comment - description" : "Experimental processing network to execute multiple existing models and use the outputs to train a 3rd model",
"comment - dataflow begin" : "dataflows definition begin -------------------------------------------------------------------------------",
"dataFlows" : [
	{
	"flowName" : "ModelOneOutput",
	"requiredFields" : {"flowFrom" : "ModelOne", "flowTo" : "DataCombine", "flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\TrainMultipleModelM1.csv" },
	"conditionalFields" : {
		"TensorflowData" : {
			"balanceClasses" : true, "ignoreBlanks" : true,
			"features" : ["xxx", "xxx"],
			"targets" : ["xxx"],
			"timeSequence" : true, "seriesStepIDField" : ["DateTime"], "seriesDataType" : "TDADateTime", "type" : "relative_time_series"
			}
		}
	},
	{
	"flowName" : "ModelTwoOutput",
	"requiredFields" : {"flowFrom" : "ModelTwo", "flowTo" : "DataCombine", "flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\TrainMultipleModelM2.csv" },
	"conditionalFields" : {
		"TensorflowData" : {
			"balanceClasses" : true, "ignoreBlanks" : true,
			"features" : ["xxx", "xxx"],
			"targets" : ["xxx"],
			"timeSequence" : true, "seriesStepIDField" : ["DateTime"], "seriesDataType" : "TDADateTime", "type" : "relative_time_series"
			}
		}
	},
	{
	"flowName" : "CombinedData",
	"requiredFields" : {"flowFrom" : "DataCombine", "flowTo" : "DataPrepare", "flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\TrainMultipleModelCombined.csv" },
	"conditionalFields" : {
		"TensorflowData" : {
			"balanceClasses" : true, "ignoreBlanks" : true,
			"features" : ["xxx", "xxx"],
			"targets" : ["xxx"],
			"timeSequence" : true, "seriesStepIDField" : ["DateTime"], "seriesDataType" : "TDADateTime", "type" : "relative_time_series"
			}
		}
	},
	{
	"flowName" : "PreparedData",
	"requiredFields" : {"flowFrom" : "DataPrepare", "flowTo" : "TrainMultipleModelOutputs", "flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\TrainMultipleModelPrepared.csv" },
	"conditionalFields" : {
		"TensorflowData" : {
			"features" : ["xxx", "xxx"],
			"targets" : ["xxx"],
			"timeSequence" : true, "seriesStepIDField" : ["DateTime"], "seriesDataType" : "TDADateTime", "type" : "relative_time_series"
			}
		}
	}
],
"comment - dataflow end " : "dataflows definition end -------------------------------------------------------------------------------",
"comment - processNodes" : "process node definitions beginh -------------------------------------------------------------------------",
"processNodes" : [
	{
	"processNodeName" : "ModelOne",
	"requiredFields" : {"processType" : "executeModel", "inputFlows" : [], "outputFlow" : "ModelOneOutput"},
	"conditionalFields" : {
		"executeCtrl" : {
		}
	}
	},
	{
	"processNodeName" : "ModelTwo",
	"requiredFields" : {"processType" : "executeModel", "inputFlows" : [], "outputFlow" : "ModelTwoOutput"},
	"conditionalFields" : {
		"executeCtrl" : {
		}
	}
	},
	{
	"processNodeName" : "DataCombine",
	"requiredFields" : {"processType" : "dataLoad", "inputFlows" : ["ModelOneOutput", "ModelTwoOutput"], "outputFlow" : "CombinedData"
	},
	"conditionalFields" : {
		"dataLoadCtrl" : {
			"comment file spec" : "d:\\brian\\AI-Projects\\tda\\market_analysis_data\\[a-z]*.csv",
			"inputFile" : [
				"d:\\brian\\AI-Projects\\tda\\market_analysis_data\\c.csv"
			]
		}
	}
	},
	{
	"processNodeName" : "DataPrepare",
	"requiredFields" : {"processType" : "dataPrep", "inputFlows" : ["CombinedData"], "outputFlow" : "PreparedData"},
	"conditionalFields" : {
		"dataPrepCtrl" : {
			"preparationSequence" : ["normalize", "oneHotEncoding"],
			"noPreparation" : {
				"features" : [
				]
			},
			"normalize" : {
				"comment types supported" : ["standard", "minmax", "relative_time_series"],
				"type" : "relative_time_series",
				"features" : [
					{"feature" : "xxx"},
					{"feature" : "xxx"}
				]
			},
			"oneHotEncoding" : {
				"features" : [
					{"feature" : "xxx", "categoryType" : "label"}
				]
			}
		}
	}
	},
	{
	"processNodeName" : "TrainMultipleModelOutputs",
	"requiredFields" : {"processType" : "Tensorflow", "inputFlows" : ["PreparedData"], "outputFlow" : ""},
	"conditionalFields" : {
		"categorizationRegression" : "categorization",
		"dataPrecision" : "float32",
		"visualizations" : ["summary", "trainingFit", "CategorizedTimeSeries", "categoryMatrix"],
		"training iterations" : [
			{
			"iteration parameters" : {
				"training iteration description" : "Recurrent model categorizing MACD flag (-1, 0 1)",
				"modelFileDir" : "d:\\brian\\AI-Projects\\models\\rnn\\lstm\\TrendLineCross",
				"iteration ID" : "adam_categorical_crossentropy",
				"forecastInterval" : 0,
				"data arrangement" : {
					"combineSampleCount" : 4
					},
				"modelLayers" : [
    				{"layerName" : "input", "layerType" : "lstm", "featureCount": 2, "timeSteps": 5, "layerUnits" : 256, "returnSequences" : true, "outputActivation" : "linear"},
					{"layerName" : "hidden-lstm-1", "layerType" : "lstm", "timeSteps" : 5, "layerUnits" : 64, "returnSequences" : false, "outputActivation" : "linear"},
					{"layerName" : "dropout1", "layerType" : "dropout", "dropoutRate" : 0.2},
    				{"layerType" : "dense", "layerName" : "hiddenDense1", "layerUnits" : 32, "outputActivation" : "linear"},
					{"layerName" : "dropout2", "layerType" : "dropout", "dropoutRate" : 0.2},
    				{"layerType" : "dense", "layerName" : "output", "layerUnits": 3, "outputActivation" : "softmax"}
					],
				"training" : {
					"lossWeights" : [1.0], "denseRegularation" : false, "regularationValue" : 0.0, "useBias" : true, 
					"batchSize" : 16, "epochs" : 5, "validationSplit" : 0.1, "testSplit" : 0.2,
					"shuffle" : false, "balanceClasses" : true,	"verbose" : 2,
					"optimizer" : {"name" : "adam", "learning_rate" : 0.001}, "compilationLoss" : "categorical_crossentropy", "compilationMetrics" : ["categorical_crossentropy"]
				},
				"tensorboard" : {
					"log file dir" : "d:\\brian\\AI-Projects\\logs\\tensorboard\\categorization\\lstm\\TrendLineCross\\"
					}
				}
			}
		]
	}
	},
	{
	"processNodeName" : "stop",
	"requiredFields" : {"processType" : "stop", "inputFlows" : [""], "outputFlow" : ""},
	"conditionalFields" : {}
	}
],
"comment - processNodes end" : "process node definitions end -------------------------------------------------------------------------",
"comment end of specification" : "----------------------------------------------------------------------------------------------------"
}