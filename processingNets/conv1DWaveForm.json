{
"comment - processing node section" : "Speciification details  for the processing nodes",
"processNodes" : [
	{
		"processNodeName" : "AcquireData",
		"requiredFields" : {
			"comments: supported values - processType" : ["dataPrep", "KerasDense", "KerasConv1D"],
			"processType" : "dataPrep",
			"inputFlows" : [],
			"outputFlow" : "weatherdata",
			"outputFile" : "",
			"logFile" : ""
		},
		"conditionalFields" : {
			"dataPrepCtrl" : {
				"inputFile" : ["d:\\brian\\ai projects\\datasets\\jena_climate_2009_2016 hourly.csv"]
			},
			"removeOutliers" : [
				{"commented - featureName - none" : "", "outlierPct" : 0.02},
				{"featureName" : "wv (m/s)", "outlierPct" : 0.00005},
				{"featureName" : "max. wv (m/s)", "outlierPct" : 0.00005}
			]
		}
	},
	{
		"processNodeName" : "weather",
		"requiredFields" : {
			"comments: supported values - processType" : ["dataPrep", "KerasDense", "KerasConv1D"],
			"processType" : "KerasConv1D",
			"inputFlows" : ["weatherdata"],
			"outputFlow" : "",
			"outputFile" : "d:\\brian\\AI Projects\\models\\ConvModel",
			"logFile" : "d:\\brian\\AI Projects\\logs\\ConvModel.txt"
		},
		"conditionalFields" : {
			"modelFile" : "d:\\brian\\AI Projects\\models\\ConvModel",
			"preprocessingLayers" : {
				"comments - supported layers" : ["linearRegression", "discretization", "categoryEncoding"],
				"preprocessSequence" : ["linearRegression"]
				},
		    "KerasDenseCtrl" : {
				"modelStructure" : {
					"inputLayer" : "LR-input",
					"layerCounts" : 1,
					"layerNodes" : 25,
					"outputLayer" : "ML-Regression",
					"comment: activations" : "output layer activation see https://keras.io/api/layers/activations/",
					"comment: activation functions" : ["relu", "linear","sigmoid", "softmax", "softplus", "softsign", "tanh", "selu", "elu", "exponential"],
					"outputActivation" : "linear"
				}
			},
			"KerasConv1DCtrl" : {
				"inputLayer" : "LR-C1Dinput",
				"outputLayer" : "LR-C1Doutput",
				"outputActivation" : "linear",
				"layerList" : ["Conv1D", "Dense", "Dense"],
				"layerActivations" : ["relu", "relu", "linear"],
				"filters" : 1,
				"kernelSize" : 5,
				"strides" : 5,
				"padding" : "valid",
				"dataFormat" : "",
				"dilationRate" : 1,
				"groups" : 1,
				"activation" : "None",
				"useBias" : true,
				"kernelInitializer" : "glorot_uniform",
				"biasInitializer" : "zeros",
				"kernelRegularizer" : "None",
				"biasRegularizer" : "None",
				"activityRegularizer" : "None",
				"kernelConstraint" : "None",
				"biasConstraint" : "None"
			},
			"training" : {
				"Comment 1" : "one output - see data flow for detaiils",
				"analysis" : "classification",
				"lossWeights" : [1.0],
				"denseRegularation" : false,
				"regularationValue" : 0.0,
				"dropout" : false,
				"dropoutRate" : 0.2,
				"shuffle" : true,
				"normalize" : true,
				"batchSize" : 32,
				"epochs" : 5,
				"useBias" : true,
				"validationSplit" : 0.2,
				"testSplit" : 0.1,
				"verbose" : 2,
				"balanceClasses" : true,
				"comment: compilationLoss" : ["see https://keras.io/api/losses/regression_losses/"],
				"comment: compilationLoss regression" : ["mean_squared_error", "mean_absolute_error", "mean_absolute_percentage_error", "mean_squared_logarithmic_error", "cosine_similarity"],
				"comment: compilationLoss categorization probablistic" : ["binary_crossentropy", "categorical_crossentropy", "sparse_categorical_crossentropy", "poisson"],
				"compilationLoss" : "mean_absolute_error",
				"comment: compilationMetrics" : ["see https://keras.io/api/metrics/regression_metrics/"],
				"comment: compilationMetrics regression" : ["mean_squared_error", "root_mean_squared_error", "mean_absolute_error", "mean_absolute_percentage_error", "mean_squared_logarithmic_error", "cosine_similarity", "log_cosh_error"],
				"comment: compilationMetrics categorization accuracy" : ["accuracy", "binary_accuracy", "categorical_accuracy", "top_k_categorical_accuracy", "sparse_top_k_categorical_accuracy"],
				"comment: compilationMetrics categorization probablistic" : ["binary_crossentropy", "categorical_crossentropy", "sparse_categorical_crossentropy", "poisson"],
				"comment: compilationMetrics true/false classification" : [],
				"comment: compilationMetrics image" : [],
				"comment: compilationMetrics hinge" : [],
				"compilationMetrics" : ["mean_squared_error"],
				"comment: activations" : "hidden layer activations https://keras.io/api/layers/activations/",
				"comment: activations regression" : ["relu", "linear","sigmoid", "softmax", "softplus", "softsign", "tanh", "selu", "elu", "exponential"],
				"activation" : "relu",
				"comment: optimizers" : "https://keras.io/api/optimizers/",
				"comment: optimizer values" : ["SGD", "RMSprop", "Adam", "Adadelta", "Adagrad", "Adamax", "Nadam", "Ftrl"],
				"optimizer" : "SGD"
			}
		}
	}
],
"comment - wave form dataflow section" : "Specification details  for the flows of data between processing nodes",
"dataFlows" : [
	{
	"flowName" : "weatherdata",
	"requiredFields" : {
		"flowFrom" : "AcquireData",
		"flowTo" : "weather"
		},
	"conditionalFields" : {
		"KerasDenseData" : {
			"timeSequence" : false,
			"balanceClasses" : true,
			"ignoreBlanks" : true,
			"flowDataFile" : "d:\\brian\\ai projects\\temp\\weather.csv",
			"features" : ["p (mbar)", "Tpot (K)", "Tdew (degC)", "rh (%)", "VPmax (mbar)", "VPact (mbar)", "VPdef (mbar)", "sh (g/kg)", "H2OC (mmol/mol)", "rho (g/m**3)", "wv (m/s)", "max. wv (m/s)", "wd (deg)"],
			"targets" : ["T (degC)"],
			"categorization" : {
				"comment 1" : "models to assess input data relationship to categorized outputs",
				"comment 1: supported categoryType values" : ["categoryTrueFalse", "categoryThreshold (above / below)", "categoryRanges"],
				"comment 2: supported categoryType values" : ["Regression"],
				"categoryType" : "Regression",
				"categoryOneHot - not required for Regression" : ["catTrue", "catFalse"]
				}
			}
		}
	}
],
"comment end of specification" : "------------------------------------------------------------------------------------"
}