{
"comment - processing node section" : "Specification details for the processing nodes",
"processNodes" : [
	{
	"processNodeName" : "dataIn",
	"requiredFields" : {
		"processType" : "dataLoad",
		"comments: supported values - processType" : ["dataLoad", "dataPrep", "Tensorflow"],
		"inputFlows" : [],
		"outputFlow" : "MACD",
		"outputFile" : "",
		"logFile" : ""
	},
	"conditionalFields" : {
		"dataLoadCtrl" : {
			"comment file spec" : "d:\\brian\\AI-Projects\\tda\\market_analysis_data\\[a-z]*.csv",
			"inputFile" : [
				"d:\\brian\\AI-Projects\\tda\\market_analysis_data\\c.csv"
			]
		}
	}
	},
	{
	"processNodeName" : "PrepData",
	"requiredFields" : {
		"processType" : "dataPrep",
		"inputFlows" : ["MACD"],
		"outputFlow" : "MACDPrepared",
		"logFile" : ""
	},
	"conditionalFields" : {
		"dataPrepCtrl" : {
			"preparationSequence" : ["normalize", "oneHotEncoding"],
			"noPreparation" : {
				"features" : [
					{"feature" : "MACD_flag"}
				],
				"comment holding noPreparation features" : [
					{"feature" : "MACD"},
					{"feature" : "MACD_Signal"},
					{"feature" : "MACD_flag"},
					{"feature" : "DateTime"}
				]
			},
			"normalize" : {
				"comment types supported" : ["standard", "minmax", "relative_time_series"],
				"type" : "relative_time_series",
				"features" : [
					{"feature" : "MACD"},
					{"feature" : "MACD_Signal"}
				],
				"comment normalize - minmax - holding features" : [
					{"feature" : "OBV"},
					{"feature" : "Volume"},
					{"feature" : "Relative Strength"},
					{"feature" : "ADX"},
					{"feature" : "AccumulationDistribution"},
					{"feature" : "OBV"},
					{"feature" : "MACD"},
					{"feature" : "MACD_Signal"},
					{"feature" : "SMA20"},
					{"feature" : "EMA12"},
					{"feature" : "EMA20"},
					{"feature" : "EMA26"},
					{"feature" : "40 day change"},
					{"feature" : "20 day change"},
					{"feature" : "10 day change"},
					{"feature" : "5 day change"},
					{"feature" : "Open"},
					{"feature" : "High"},
					{"feature" : "Low"},
					{"feature" : "Close"}
				]
			},
			"oneHotEncoding" : {
				"features" : [
				],
				"comment oneHot hoding definitions" : [
					{
					"feature" : "OBV",
					"categoryType" : "seriesChangeUpDown",
					"categories" : ["Up" , "Down"],
					"outputFields" : ["OBVUp", "OBVDown"]
					}
				]
			}
		}
	}
	},
	{
	"processNodeName" : "MACD",
	"requiredFields" : {
		"comments: supported values - processType" : ["dataPrep", "Tensorflow"],
		"processType" : "Tensorflow",
		"inputFlows" : ["MACDPrepared"],
		"outputFlow" : "",
		"outputFile" : "d:\\brian\\AI-Projects\\models\\MACD",
		"logFile" : "d:\\brian\\AI-Projects\\logs\\MACD.txt"
	},
	"conditionalFields" : {
		"modelFile" : "d:\\brian\\AI-Projects\\models\\MACD",
		"categorizationRegression" : "regression",
		"combineSampleCount" : 9,
		"forecastInterval" : 1,
		"dataPrecision" : "float32",
		"visualizations" : ["summary", "trainingFit", "testVsPrediction"],
		"supported visualizations" : [
			{
			"targetSeries" : "", 
			"dataGroups" : "", 
			"normalizationCategorization" : "", 
			"testVsPrediction" : "",
			"valid for all models" : [
				{
				"summary" : "Prints tensorflow layer report",
				"trainingFit" : "Prints loss and accuracy charts"
				}
			],
			"valid for all dense categorization" : [
				{
				"denseCategorization" : "",
				"categoryMatrix" : "Prints a matrix of evaluation labels vs. actual labels"
				}
			],
			"valid for all dense regression" : [
				{
				"testVsPrediction" : ""
				}
			],
			"valid for all CNN categorization" : [
				{
				"cnnResult" : "",
				"categoryMatrix" : "Prints a matrix of evaluation labels vs. actual labels"
				}
			],
			"valid for all CNN regression" : [
				{
				}
			],
			"valid for all RNN categorization" : [
				{
				"categoryMatrix" : "Prints a matrix of evaluation labels vs. actual labels"
				}
			],
			"valid for all RNN regression" : [
				{
				}
			]
			}
		],
		"comment model specification values supported" : [
			{
			"layerType" : ["conv1d", "lstm", "dense", "TimeDistributed", "dropout", "flatten", "GlobalMaxPool1D"],
			"layer params - common required" : ["layerType", "layerName", "outputActivation"],
			"layer params - dense" : ["layerUnits"],
			"layer params - lstm" : [""],
			"layer params - conv1d" : ["featureCount", "timeSteps", "filterCount", "filterSize", ""],
			"layer params - dropout" : ["dropoutRate"],
			"returnSequences" : "true if the next layer is also an RNN layer",
			"outputActivation" : ["linear", "relu", "tanh", "softmax", "sigmoid", "softplus", "softsign", "selu", "elu", "exponential"]
			}
		],
		"modelLayers dense / regression" : [
			{
			"categorizationRegression" : ["regression"],
			"combineSampleCount" : "",
			"visualizations" : ["summary", "trainingFit"],
			"type" : "relative_time_series"
			}
		],
		"modelLayers LSTM / regression" : [
			{
			"categorizationRegression" : ["regression"],
			"visualizations" : ["summary", "trainingFit"],
			"type" : "relative_time_series"
			}
		],
		"modelLayers conv1D / regression" : [
			{
			"categorizationRegression" : ["regression"],
			"visualizations" : ["summary", "trainingFit"],
			"type" : "relative_time_series"
			}
		],
		"modelLayers dense / categorization" : [
			{
			"categorizationRegression" : ["categorization"],
			"visualizations" : ["summary", "trainingFit", "denseCategorization", "categoryMatrix"],
			"type" : "relative_time_series"
			},
    		{"layerType" : "dense", "layerName" : "input", "featureCount": 2, "layerUnits": 256, "outputActivation" : "relu"},
    		{"layerType" : "dropout", "layerName" : "drop1", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "output", "layerUnits": 3, "outputActivation" : "softmax"}
		],
		"modelLayers LSTM / categorization" : [
			{
			"categorizationRegression" : ["categorization"],
			"visualizations" : ["summary", "trainingFit", "categoryMatrix"],
			"type" : "relative_time_series"
			},
    		{"layerType" : "lstm", "layerName" : "input", "layerUnits" : 128, "featureCount": 2, "timeSteps": 9, "outputActivation" : "relu"},
    		{"layerType" : "dense", "layerName" : "hiddenDense1", "layerUnits": 128, "outputActivation" : "tanh"},
    		{"layerType" : "dropout", "layerName" : "drop1", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "output", "layerUnits": 3, "outputActivation" : "softmax"}
		],
		"modelLayers conv1D / categorization" : [
			{
			"categorizationRegression" : ["categorization"],
			"visualizations" : ["summary", "trainingFit", "cnnResult", "categoryMatrix"],
			"type" : "relative_time_series"
			},
    		{"layerType" : "conv1d", "layerName" : "input", "featureCount": 2, "timeSteps": 9, "filterCount" : 3, "filterSize" : 5, "outputActivation" : "tanh"},
    		{"layerType" : "GlobalMaxPool1D", "layerName" : "GMP1D"},
    		{"layerType" : "dense", "layerName" : "hiddenDense1", "layerUnits": 64, "outputActivation" : "tanh"},
    		{"layerType" : "dropout", "layerName" : "drop1", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "hiddenDense2", "layerUnits": 128, "outputActivation" : "tanh"},
    		{"layerType" : "dropout", "layerName" : "drop2", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "output", "layerUnits": 3, "outputActivation" : "softmax"}
		],
		"configuration changes to match model layer configuration" : [
			{"categorizationRegression" : ["categorization", "regression"]},
			{"dense" : ["visualizations", "timeSequence"]},
			{"LSTM" : ["visualizations", "timeSequence"]},
			{"conv1D" : ["visualizations", "timeSequence"]}
		],
		"modelLayers" : [
    		{"layerType" : "dense", "layerName" : "input", "layerUnits" : 32, "featureCount": 18, "outputActivation" : "tanh"},
    		{"layerType" : "dropout", "layerName" : "drop1", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "hiddenDense1", "layerUnits": 16, "outputActivation" : "tanh"},
    		{"layerType" : "dropout", "layerName" : "drop2", "dropoutRate" : 0.2},
    		{"layerType" : "dense", "layerName" : "denseForecast", "layerUnits": 1, "outputActivation" : "tanh"}
		],
		"training" : {
			"lossWeights" : [1.0],
			"denseRegularation" : false,
			"regularationValue" : 0.0,
			"batchSize" : 32,
			"epochs" : 10,
			"useBias" : true,
			"validationSplit" : 0.1,
			"testSplit" : 0.2,
			"shuffle" : false,
			"verbose" : 2,
			"balanceClasses" : true,
			"compilationLoss" : "mae",
			"Compilation Loss metrics" : ["mae", "sparse_categorical_crossentropy"],
			"compilationMetrics" : ["accuracy"],
			"optimizer" : "adam",
			"optimizers - adam" : "fast, tends to overfit",
			"optimizers - SGD" : "slow, great results",
			"optimizers - RMSProp" : "sometimes works best",
			"optimizers - SWA" : "Unknown optimizer - can easily improve qualiy"
		}
	}
	}
],
"comment - dataflow section" : "Specification details for the flows of data between processing nodes",
"dataFlows" : [
	{
	"flowName" : "MACD",
	"requiredFields" : {
		"flowFrom" : "dataIn",
		"flowTo" : "PrepData",
		"flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\MACD.csv"
		},
	"conditionalFields" : {
		"TensorflowData" : {
			"balanceClasses" : true,
			"ignoreBlanks" : true,
			"features" : ["MACD", "MACD_Signal"],
			"targets" : ["MACD_flag"],
			"timeSequence" : false
			}
		}
	},
	{
	"flowName" : "MACDPrepared",
	"requiredFields" : {
		"flowFrom" : "PrepData",
		"flowTo" : "MACD",
		"flowDataFile" : "d:\\brian\\AI-Projects\\internal_flows\\MACDPrepared.csv"
		},
	"conditionalFields" : {
		"TensorflowData" : {
			"features" : ["MACD", "MACD_Signal"],
			"targets" : ["MACD_flag"],
			"timeSequence" : false
			}
		}
	}
],
"comment end of specification" : "------------------------------------------------------------------------------------"
}